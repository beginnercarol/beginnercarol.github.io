<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Carol</title>
    <description>Carol的前端修行</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 18 Sep 2017 00:11:02 +0800</pubDate>
    <lastBuildDate>Mon, 18 Sep 2017 00:11:02 +0800</lastBuildDate>
    <generator>Jekyll v3.4.0</generator>
    
      <item>
        <title>ASP.net 基础</title>
        <description>&lt;hr /&gt;

&lt;p&gt;阅读&lt;a href=&quot;https://www.nodebeginner.org/index-zh-cn.html&quot;&gt;Node 入门&lt;/a&gt;时的一些总结和想法.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;异步编程的直接体现就是&lt;strong&gt;回调&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;创建一个 HTTP 服务器:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
//server.js
var http = require(&quot;HTTP&quot;);

http.createServer(function(request,response){
  response.writeHead(200,{&quot;Content-type&quot;:&quot;text/plain&quot;});
  response.write(&quot;Hello,world!&quot;);
  response.end();
}).listen(8888);//端口号

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;为了做到模块封装,在主程序(index.js)中调用,需要将函数封装:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//server.js
var http = require(&quot;http&quot;);

function start(){
  http.createServer(function(request,response){
    console.log(&quot;Server has accepted your request.&quot;);
    response.writeHead(200,{&quot;Content-type&quot;:&quot;text/plain&quot;});
    response.write(&quot;Hello&quot;);
    response.end();
  }).listen(8888);
  console.log(&quot;Server is working...&quot;);
}

exports.start = start;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//index.js
var server = require(&quot;./server.js&quot;);
server.start();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;js 可以将函数作为参数传进另一个函数,这一点好好体会一下,不需要 require(‘./router.js’)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//router.js
var url = require(&quot;url&quot;);
function router (pathname) {
  console.log(&quot;Request for:&quot;+pathname);
}
exports.router = router;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//server.js
var http = require(&quot;http&quot;);
var url = require(&quot;url&quot;);

function start(router){//在这里传递了一个函数 router 作为参数
  function onRequest(request,response){
    var pathname = url.parse(request.url).pathname;
    console.log(&quot;Request for:&quot;+pathname+&quot; received.&quot;);

    router(pathname);//js 可以传递函数作为参数,因此不需要 require('./router.js')

    response.writeHead(200,{&quot;Content-type&quot;:&quot;text/plain&quot;});
    response.write(&quot;Hello&quot;);
    response.end();
  }

  http.createServer(onRequest).listen(8888);
  console.log(&quot;Server is working...&quot;);
}

exports.start = start;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By the way, console 的内容当然是在服务器端才能看见!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;接下来考虑的是 router.js 针对每一个不同的 url 请求应该有不同的请求响应函数. 新增加一个模块&lt;code class=&quot;highlighter-rouge&quot;&gt;requestHandler.js&lt;/code&gt;, 在里面写好相关的请求响应函数.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;该怎么把这个请求响应函数与 router.js 关联起来??&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;使用依赖注入可以让路由和请求处理程序之间的耦合更加松散，也因此能让路由的重用性更高。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;选择将请求响应函数包装成对象,通过 index.js 注入到 router 中.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//index.js
var server = require(&quot;./server&quot;);
var router = require(&quot;./router&quot;);
var requestHandle = require(&quot;./requestHandle&quot;);

var handler = {};
handler[&quot;/&quot;] = requestHandle.start;
handler[&quot;/start&quot;] = requestHandle.start;
handler[&quot;/upload&quot;] = requestHandle.upload;


server.start(router.router,handler);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;越来越像 java ~&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Sep 2017 23:05:00 +0800</pubDate>
        <link>http://localhost:4000/2017/09/ASP.net/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/09/ASP.net/</guid>
        
        <category>fcc</category>
        
        
      </item>
    
      <item>
        <title>XML 基础</title>
        <description>&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;XML 可以定义自己的标签&lt;/li&gt;
  &lt;li&gt;用于传输数据&lt;/li&gt;
  &lt;li&gt;兼容各种系统,纯文本&lt;/li&gt;
  &lt;li&gt;XML 结构:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--声明--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;root&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--根元素,必须要有--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;child&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--子元素--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;subchild&amp;gt;&lt;/span&gt;.....&lt;span class=&quot;nt&quot;&gt;&amp;lt;/subchild&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/child&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--必须关闭每一个标签--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;类似于 DOM 树的概念,每个元素都可以拥有文本内容和属性&lt;/li&gt;
  &lt;li&gt;必须关闭标签&lt;/li&gt;
  &lt;li&gt;大小写敏感&lt;/li&gt;
  &lt;li&gt;嵌套顺序必须一致&lt;/li&gt;
  &lt;li&gt;必须有根元素&lt;/li&gt;
  &lt;li&gt;属性必须加引号:(单双均可)
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;note date=&quot;2017-09-17&quot;&amp;gt;...&amp;lt;/note&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;实体引用(同 HTML)&lt;/li&gt;
  &lt;li&gt;注释(同 HTML)&lt;/li&gt;
  &lt;li&gt;连续多个空格会被保留&lt;/li&gt;
  &lt;li&gt;以 LF(换行符)存储换行(插花:CR 指回车符)&lt;/li&gt;
  &lt;li&gt;命名规则:
 a. 不能以数字 or 标点符号开始,也不能以”xml/XML/Xml”开始
 b. 不能包含空格
 c. 无保留字符
 d. 避免&lt;code class=&quot;highlighter-rouge&quot;&gt;- . :&lt;/code&gt;
 e. 下划线&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;可以&lt;/li&gt;
  &lt;li&gt;避免使用属性:(属性不易扩展)
做到信息最细分割
最佳实例:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;note&amp;gt;
&amp;lt;date&amp;gt;//不要作为 note 的属性,方便提取数据
  &amp;lt;day&amp;gt;08&amp;lt;/day&amp;gt;
  &amp;lt;month&amp;gt;08&amp;lt;/month&amp;gt;
  &amp;lt;year&amp;gt;2008&amp;lt;/year&amp;gt;
&amp;lt;/date&amp;gt;
&amp;lt;to&amp;gt;George&amp;lt;/to&amp;gt;
&amp;lt;from&amp;gt;John&amp;lt;/from&amp;gt;
&amp;lt;heading&amp;gt;Reminder&amp;lt;/heading&amp;gt;
&amp;lt;body&amp;gt;Don't forget the meeting!&amp;lt;/body&amp;gt;
&amp;lt;/note&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;属性用于区分 XML 元素是可以接受的(同 HTML)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;元数据&lt;/strong&gt;(关于数据的数据/信息)应该被保存为属性,而&lt;strong&gt;数据就该被存储为数据&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.evernote.com/shard/s245/nl/50832658/2daf541d-0bbe-4aa9-8908-469b9df9c9a1/&quot;&gt;DTD(document type definition)&lt;/a&gt; 函数声明,定义 XML 文件的结构&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;XML 文档的错误会终止 XML 程序&lt;/li&gt;
  &lt;li&gt;XML 文件不会直接显示为 HTML 文件&lt;/li&gt;
  &lt;li&gt;CSS 可以用来格式化 XML(不推荐,建议用 XSLT)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;cd_catalog.css&quot;?&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;XSLT&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;simple.xsl&quot;?&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;建议在服务器上转换 XML&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Sep 2017 12:57:00 +0800</pubDate>
        <link>http://localhost:4000/2017/09/XML/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/09/XML/</guid>
        
        <category>fcc</category>
        
        
      </item>
    
      <item>
        <title>FCC 找出能被两个给定参数和它们之间的连续数字整除的最小公倍数</title>
        <description>&lt;hr /&gt;
&lt;h4 id=&quot;辗转相除法&quot;&gt;辗转相除法&lt;/h4&gt;

&lt;h5 id=&quot;思路1&quot;&gt;思路1：&lt;/h5&gt;
&lt;p&gt;=====
待求数组(allNum)的每一个数字都去除以质数数组(primes)中的元素，
&lt;strong&gt;只要有一个元素能被整除&lt;/strong&gt;就推入commonFactor
原理理解错了，做了很久。
code：&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;smallestCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;primes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//质数&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commonFactor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//存储因子&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;allNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//生成最小到最大值之间的所有数&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;primes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;retrun&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//当allNum中有一个数不为1，则继续辗转相除&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;allNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;allNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;allNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;nx&quot;&gt;isratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;nx&quot;&gt;allNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;commonFactor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commonFactor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;curr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;curr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;p&gt;Q：如何判断一个函数数组为空？？？
&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.length === 0&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Sep 2017 19:58:00 +0800</pubDate>
        <link>http://localhost:4000/2017/09/FCC-smallesCommonMultiple/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/09/FCC-smallesCommonMultiple/</guid>
        
        <category>fcc</category>
        
        
      </item>
    
      <item>
        <title>CSS Flex 布局</title>
        <description>&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;容器 + 项目(item)&lt;/li&gt;
  &lt;li&gt;项目的 &lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;vertical-align&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;clear&lt;/code&gt;失效&lt;/li&gt;
  &lt;li&gt;默认两根轴: main axis (水平), cross axis(垂直),方向可以更改&lt;/li&gt;
  &lt;li&gt;容器的属性:
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction&lt;/code&gt;主轴的方向:
&lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;row-reverse&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;column&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;column-reverse&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-wrap&lt;/code&gt;换行的方式:
&lt;code class=&quot;highlighter-rouge&quot;&gt;nowrap&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;wrap&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;wrap-reverse&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-flow&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;justify-content&lt;/code&gt;项目在主轴上的对齐方式:
&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-start&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-end&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;center&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;space-between&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;space-around&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;align-items&lt;/code&gt; 项目在交叉轴上如何对齐:
&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-start&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-end&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;center&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;space-between&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;space-around&lt;/code&gt;
        &lt;ol&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;align-content&lt;/code&gt;多根轴线对齐方式(???)&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;项目的属性:
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;order:integer&lt;/code&gt;
项目的排列顺序,数字越小排列越靠前,可以为负数&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow:&lt;/code&gt;
允许项目变大.默认为0,全为1则平分&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-shrink:&lt;/code&gt;
允许项目变小,默认为1&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-basis:&lt;/code&gt;
定义在分配多余主轴空间之前,项目占据的主轴空间,可以像&lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;一样设定,占据固定空间,设为&lt;code class=&quot;highlighter-rouge&quot;&gt;auto&lt;/code&gt;则为项目本来大小&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flex&lt;/code&gt;是上面三个的简写形式 默认 0 1 auto&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;align-self&lt;/code&gt;允许单个项目拥有不同于容器定义的&lt;code class=&quot;highlighter-rouge&quot;&gt;align-item&lt;/code&gt;,值同&lt;code class=&quot;highlighter-rouge&quot;&gt;align-item&lt;/code&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 15 Sep 2017 23:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/09/CSS-flex/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/09/CSS-flex/</guid>
        
        <category>css</category>
        
        
      </item>
    
  </channel>
</rss>
